{"version":3,"file":"static/js/316.e4935b2b.chunk.js","mappings":"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","sources":["components/Playground/Navbar.js","components/Playground/CodeEditor.js","components/Playground/EditContainer.js","components/Playground/InputConsole.js","components/Playground/OutputConsole.js","pages/PlayGround.js"],"sourcesContent":["import React from 'react'\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <div className=\"p-2 bg-black flex justify-center items-center gap-4\">\r\n      <img className=\"w-24 h-24\" src=\"/logo.png\" alt=\"logo\" />\r\n      <div className=\"text-white text-4xl\">Code Deck</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Navbar","import React, { useState, useEffect } from \"react\";\r\nimport CodeMirror from \"@uiw/react-codemirror\";\r\n\r\nimport { githubDark, githubLight } from \"@uiw/codemirror-theme-github\";\r\nimport { bespin } from \"@uiw/codemirror-theme-bespin\";\r\nimport { duotoneDark, duotoneLight } from \"@uiw/codemirror-theme-duotone\";\r\nimport { dracula } from \"@uiw/codemirror-theme-dracula\";\r\nimport { xcodeDark, xcodeLight } from \"@uiw/codemirror-theme-xcode\";\r\nimport { vscodeDark } from \"@uiw/codemirror-theme-vscode\";\r\nimport { okaidia } from \"@uiw/codemirror-theme-okaidia\";\r\n\r\nimport { cpp } from \"@codemirror/lang-cpp\";\r\nimport { java } from \"@codemirror/lang-java\";\r\nimport { python } from \"@codemirror/lang-python\";\r\nimport { javascript } from \"@codemirror/lang-javascript\";\r\n\r\n\r\nimport { indentUnit } from \"@codemirror/language\";\r\nimport { EditorState } from \"@codemirror/state\";\r\n\r\nconst CodeEditor = ({\r\n  currentCode,\r\n  currentLanguage,\r\n  setCurrentCode,\r\n  currentTheme,\r\n}) => {\r\n\r\n  const [theme, setTheme] = useState(githubDark);\r\n  const [language, setLanguage] = useState(javascript);\r\n\r\n  useEffect(() => {\r\n    if (currentLanguage === \"javascript\") {\r\n      setLanguage(javascript);\r\n    } else if (currentLanguage === \"python\") {\r\n      setLanguage(python);\r\n    } else if (currentLanguage === \"java\") {\r\n      setLanguage(java);\r\n    } else if (currentLanguage === \"cpp\") {\r\n      setLanguage(cpp);\r\n    }\r\n  }, [currentLanguage]);\r\n\r\n  useEffect(()=>{\r\n    if(currentTheme === \"githubDark\"){\r\n        setTheme(githubDark);\r\n    }\r\n    else if(currentTheme===\"githubLight\"){\r\n        setTheme(githubLight);\r\n    }\r\n  })\r\n  \r\n  return (\r\n    <div>CodeEditor</div>\r\n  )\r\n}\r\n\r\nexport default CodeEditor","import React, { useContext, useState } from \"react\";\r\nimport { BiEditAlt, BiImport, BiExport, BiFullscreen } from \"react-icons/bi\";\r\nimport Select from \"react-select\";\r\nimport CodeEditor from \"./CodeEditor\"\r\nimport { languageMap } from \"../../context/PlaygroundContext\";\r\nimport { ModalContext } from \"../../context/ModalContext\";\r\n\r\n\r\nconst EditContainer = ({\r\n  title,\r\n  currentLanguage,\r\n  setCurrentLanguage,\r\n  currentCode,\r\n  setCurrentCode,\r\n  folderId,\r\n  playgroundId,\r\n  saveCode,\r\n  runCode,\r\n  isFullScreen,\r\n  setIsFullScreen,\r\n  getFile,\r\n}) => {\r\n\r\n  const { openModal } = useContext;\r\n  const themeOptions = [\r\n    { value: \"githubDark\", label: \"Github Dark\" },\r\n    { value: \"githubLight\", lablel: \"github white\" },\r\n    { value: \"bespin\", label: \"Bespin\" },\r\n    { value: \"duotoneDark\", label: \"Duotone Dark\" },\r\n    { value: \"duotoneLight\", label: \"Duotone Light\" },\r\n    { value: \"dracula\", label: \"Dracula\" },\r\n    { value: \"xcodeDark\", label: \"Xcode Dark\" },\r\n    { value: \"xcodeLight\", label: \"Xcode Light\" },\r\n    { value: \"vscodeDark\", label: \"Vscode Dark\" },\r\n    { value: \"vscodeLight\", label: \"Vscode Light\" },\r\n    { value: \"okaidia\", label: \"Okaidia\" },\r\n  ];\r\n  const languageOptions = [\r\n    { value: \"cpp\", label: \"C++\" },\r\n    { value: \"javascript\", label: \"javascript\" },\r\n    { value: \"python\", label: \"python\" },\r\n    { value: \"java\", label: \"java\" },\r\n  ];\r\n  const [currentTheme, setCurrentTheme] = useState(themeOptions[0]);\r\n  const handleThemeChange = (selectedOption) => {\r\n    setCurrentTheme(selectedOption);\r\n  };\r\n  const [language, setLanguage] = useState(() => {\r\n    for (let i = 0; i < languageOptions.length; i++) {\r\n      if (languageOptions[i].value === currentLanguage) {\r\n        return languageOptions[i];\r\n      }\r\n    }\r\n    return languageOptions[0];\r\n  });\r\n\r\n  const handleLanguageChange = (selectedOption) =>{\r\n    setLanguage(selectedOption);\r\n    setCurrentLanguage(selectedOption.value);\r\n    setCurrentCode(languageMap[selectedOption.value].defaultCode);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <CodeEditor\r\n        currentCode={currentCode}\r\n        currentLanguage={currentLanguage}\r\n        setCurrentCode={setCurrentCode}\r\n        currentTheme={currentTheme}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EditContainer","import React from 'react'\r\n\r\nconst InputConsole = () => {\r\n  return (\r\n    <div>InputConsole</div>\r\n  )\r\n}\r\n\r\nexport default InputConsole","import React from 'react'\r\n\r\nconst OutputConsole = () => {\r\n  return (\r\n    <div>OutputConsole</div>\r\n  )\r\n}\r\n\r\nexport default OutputConsole","// b4e5c5a05fmsh9adf6ec091523f8p165338jsncc58f31c26e1\r\n\r\nimport React, { useContext, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Buffer } from \"buffer\";\r\nimport axios from \"axios\";\r\nimport { languageMap, PlaygroundContext } from \"../context/PlaygroundContext\";\r\nimport { ModalContext } from \"../context/ModalContext\";\r\nimport Navbar from \"../components/Playground/Navbar\";\r\nimport EditContainer from \"../components/Playground/EditContainer\";\r\nimport InputConsole from \"../components/Playground/InputConsole\";\r\nimport OutputConsole from \"../components/Playground/OutputConsole\";\r\nfunction PlayGround() {\r\n  const { folderId, playgroundId } = useParams();\r\n  const { folders, savePlayground } = useContext(PlaygroundContext);\r\n  const { openModal, closeModal } = useContext(ModalContext);\r\n  const { title, language, code } = folders[folderId].playgrounds[playgroundId];\r\n\r\n  const [currentLanguage, setCurrentLanguage] = useState(language);\r\n  const [currentCode, setCurrentCode] = useState(code);\r\n  const [currentInput, setCurrentInput] = useState(\"\");\r\n  const [currentOutput, setCurrentOutput] = useState(\"\");\r\n  const [isFullScreen, setIsFullScreen] = useState(false);\r\n\r\n  const saveCode = () => {\r\n    savePlayground(folderId, playgroundId, currentCode, currentLanguage);\r\n  };\r\n\r\n  const encode = (str) => {\r\n    return Buffer.from(str, \"binary\").toString(\"base64\");\r\n  };\r\n\r\n  const decode = (str) => {\r\n    return Buffer.from(str, \"base64\").toString();\r\n  };\r\n\r\n  const postSubmission = async (language_id, source_code, std_in) => {\r\n    const options = {\r\n      method: \"POST\",\r\n      url: \"https://judge0-ce.p.rapidapi.com/submissions\",\r\n      params: { base64_encoded: true, fields: \"*\" },\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        \"X-RapidAPI-Key\": \"b4e5c5a05fmsh9adf6ec091523f8p165338jsncc58f31c26e1\",\r\n        \"X-RapidAPI-Host\": \"judge0-ce.p.rapidapi.com\",\r\n      },\r\n      data: JSON.stringify({\r\n        language_id: language_id,\r\n        source_code: source_code,\r\n        std_in: std_in,\r\n      }),\r\n    };\r\n    const res = await axios.request(options);\r\n    return res.data.token;\r\n  };\r\n\r\n  const getOutput = async (token) => {\r\n    const options = {\r\n      method: \"GET\",\r\n      url: \"https://judge0-ce.p.rapidapi.com/submissions/\" + token,\r\n      params: { base64_encoded: true, fields: \"*\" },\r\n      headers: {\r\n        \"X-RapidAPI-Key\": \"3ed7a75b44mshc9e28568fe0317bp17b5b2jsn6d89943165d8\",\r\n        \"X-RapidAPI-Host\": \"judge0-ce.p.rapidapi.com\",\r\n      },\r\n    };\r\n\r\n    const res = await axios.request(options);\r\n    if (res.data.status_id <= 2) {\r\n      const res2 = await getOutput(token);\r\n      return res2.data;\r\n    }\r\n    return res.data;\r\n  };\r\n  const runCode = async () => {\r\n    openModal({\r\n      show: true,\r\n      modalType: 6,\r\n      identifiers: {\r\n        folderId: \"\",\r\n        cardID: \"\",\r\n      },\r\n    });\r\n    const language_id = languageMap[currentLanguage].id;\r\n    const source_code = encode(currentCode);\r\n    const std_in = encode(currentInput);\r\n    const token = await postSubmission(language_id, source_code, std_in);\r\n    const res = await getOutput(token);\r\n    const status_name = res.status.description;\r\n    const decoded_output = decode(res.stdout ? res.stdout : \"\");\r\n    const decoded_compile_output = decode(\r\n      res.compile_output ? res.compile_output : \"\"\r\n    );\r\n    const decoded_error = decode(res.stderr ? res.stderr : \"\");\r\n    let final_output = \"\";\r\n    if (res.status_id !== 3) {\r\n      if (decoded_compile_output === \"\") {\r\n        final_output = decoded_error;\r\n      } else {\r\n        final_output = decoded_compile_output;\r\n      }\r\n    } else {\r\n      final_output = decoded_output;\r\n    }\r\n    setCurrentOutput(status_name + \"\\n\\n\" + final_output);\r\n    closeModal();\r\n  };\r\n\r\n  function readFileContent(file) {\r\n    const reader = new FileReader();\r\n    return new Promise((resolve, reject) => {\r\n      reader.onload = (event) => resolve(event.target.result);\r\n      reader.onerror = (err) => reject(err);\r\n      reader.readAsText(file);\r\n    });\r\n  }\r\n  const placeFileContent = (file, setState) => {\r\n    readFileContent(file)\r\n      .then((content) => {\r\n        setState(content);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n  const getFile = (e, setState) => {\r\n    const input = e.target;\r\n    if (\"files\" in input && input.files.length > 0) {\r\n      placeFileContent(input.files[0], setState);\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <div className=\"flex\">\r\n        <div className=\"w-1/2 h-screen\">\r\n          <EditContainer\r\n            title={title}\r\n            currentLanguage={currentLanguage}\r\n            setCurrentLanguage={setCurrentLanguage}\r\n            currentCode={currentCode}\r\n            setCurrentCode={setCurrentCode}\r\n            folderId={folderId}\r\n            playgroundId={playgroundId}\r\n            saveCode={saveCode}\r\n            runCode={runCode}\r\n            isFullScreen={isFullScreen}\r\n            setIsFullScreen={setIsFullScreen}\r\n            getFile={getFile}\r\n          />\r\n        </div>\r\n        <div className=\"w-1/2 h-screen flex flex-col\">\r\n          <InputConsole\r\n            getFile={getFile}\r\n            currentInput={currentInput}\r\n            setCurrentInput={setCurrentInput}\r\n          />\r\n          <OutputConsole currentOutput={currentOutput} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PlayGround;\r\n"],"names":["className","src","alt","currentCode","currentLanguage","currentTheme","setCurrentCode","useState","githubDark","setTheme","javascript","setLanguage","useEffect","python","java","cpp","githubLight","title","setCurrentLanguage","languageOptions","folderId","playgroundId","saveCode","runCode","isFullScreen","setIsFullScreen","getFile","useContext","value","label","i","length","useParams","PlaygroundContext","folders","savePlayground","ModalContext","openModal","closeModal","playgrounds","language","code","currentInput","setCurrentInput","currentOutput","setCurrentOutput","encode","str","Buffer","toString","decode","postSubmission","language_id","source_code","std_in","options","method","url","params","base64_encoded","fields","headers","data","JSON","stringify","axios","res","token","getOutput","status_id","res2","show","modalType","identifiers","cardID","languageMap","id","status_name","status","description","decoded_output","stdout","decoded_compile_output","compile_output","decoded_error","stderr","final_output","placeFileContent","file","setState","reader","FileReader","Promise","resolve","reject","onload","event","target","result","onerror","err","readAsText","readFileContent","then","content","catch","console","log","e","input","files"],"sourceRoot":""}